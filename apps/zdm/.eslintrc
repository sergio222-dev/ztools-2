{
  "extends": [
    "plugin:@typescript-eslint/recommended",
    "plugin:import/recommended",
    "plugin:import/typescript",
    "plugin:unicorn/recommended",
    "plugin:eslint-comments/recommended",
    "plugin:qwik/recommended"
    //    "plugin:prettier/recommended"
  ],
  "parser": "@typescript-eslint/parser",
  "plugins": ["@typescript-eslint"],
  "rules": {
    //    "jest/no-disabled-tests": "warn",
    //    "jest/no-focused-tests": "error",
    //    "jest/no-identical-title": "error",
    //    "jest/prefer-to-have-length": "warn",
    //    "jest/valid-expect": "error",
    "sort-imports": [
      "error",
      {
        "ignoreCase": true,
        "ignoreDeclarationSort": true
      }
    ],
    "prefer-destructuring": [
      "error",
      {
        "array": true,
        "object": true
      },
      {
        "enforceForRenamedProperties": false
      }
    ],
    "import/order": [
      "warn",
      {
        "groups": ["external", ["builtin", "index", "sibling", "parent", "internal"], ["object", "type"]],
        "newlines-between": "always",
        "alphabetize": {
          "order": "asc",
          "caseInsensitive": true
        }
      }
    ],
    "linebreak-style": ["error", "windows"],
    "object-curly-spacing": ["error", "always"],
    "unicorn/prevent-abbreviations": [
      "error",
      {
        "allowList": {
          "props": true
        }
      }
    ],
    "unicorn/filename-case": [
      "error",
      {
        "cases": {
          "camelCase": true,
          "pascalCase": true
        }
      }
    ]
  },
  "settings": {
    "import/parsers": {
      "@typescript-eslint/parser": [".ts", ".tsx"]
    },
    "import/resolver": {
      "typescript": {
        "alwaysTryTypes": true,
        // always try to resolve types under `<root>@types` directory even it doesn't contain any source code, like `@types/unist`

        // Choose from one of the "project" configs below or omit to use <root>/tsconfig.json by default

        //         use <root>/path/to/folder/tsconfig.json
        "project": "./tsconfig.json"
        // Multiple tsconfigs (Useful for monorepos)

        // use a glob pattern
        //        "project": "packages/*/tsconfig.json",
        // use an array
        //        "project": [
        //          "packages/module-a/tsconfig.json",
        //          "packages/module-b/tsconfig.json"
        //        ],
        // use an array of glob patterns
        //        "project": [
        //          "packages/*/tsconfig.json",
        //          "other-packages/*/tsconfig.json"
        //        ]
      }
    }
  }
}
