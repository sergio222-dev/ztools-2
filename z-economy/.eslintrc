{
  "extends": [
    "plugin:react/recommended",
    "plugin:react/jsx-runtime",
    "plugin:@typescript-eslint/recommended",
    "plugin:import/recommended",
    "plugin:import/typescript",
    "plugin:unicorn/recommended",
    "plugin:eslint-comments/recommended"
    //    "plugin:prettier/recommended"
  ],
  "parser": "@typescript-eslint/parser",
  "plugins": ["@typescript-eslint", "react-hooks"],
  "rules": {
    //    "prettier/prettier": "error",
    "linebreak-style": ["error", "windows"],
    "object-curly-spacing": ["error", "always"],
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "warn",
    "unicorn/prevent-abbreviations": [
      "error",
      {
        "allowList": {
          "props": true
        },
        "ignore": [
          // When checking filenames, only the basename is tested. For example, with a file named foo.e2e.js, ignore: [/\.e2e$/] would pass and ignore: [/\.e2e\.js/] would fail.
          // https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prevent-abbreviations.md
          "\\.d$"
        ]
      }
    ],
    "unicorn/filename-case": [
      "error",
      {
        "cases": {
          "camelCase": true,
          "pascalCase": true
        },
        "ignore": ["\\.d\\.ts$"]
      }
    ]
  },
  "settings": {
    "react": {
      "version": "detect" // React version. "detect" automatically picks the version you have installed.
      // You can also use `16.0`, `16.3`, etc, if you want to override the detected value.
      // It will default to "latest" and warn if missing, and to "detect" in the future
    },
    "import/parsers": {
      "@typescript-eslint/parser": [".ts", ".tsx"]
    },
    "import/resolver": {
      "typescript": {
        "alwaysTryTypes": true,
        // always try to resolve types under `<root>@types` directory even it doesn't contain any source code, like `@types/unist`

        // Choose from one of the "project" configs below or omit to use <root>/tsconfig.json by default

        //         use <root>/path/to/folder/tsconfig.json
        "project": "./tsconfig.json"
        // Multiple tsconfigs (Useful for monorepos)

        // use a glob pattern
        //        "project": "packages/*/tsconfig.json",
        // use an array
        //        "project": [
        //          "packages/module-a/tsconfig.json",
        //          "packages/module-b/tsconfig.json"
        //        ],
        // use an array of glob patterns
        //        "project": [
        //          "packages/*/tsconfig.json",
        //          "other-packages/*/tsconfig.json"
        //        ]
      }
    }
  }
}
